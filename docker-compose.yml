version: '3.8'

services:

  service_monitor:
    build:
      context: ./dashboard
      dockerfile: Dockerfile
    volumes:
      - ./dashboard:/app
      # - /app/node_modules  # Avoid overwriting node_modules with host
    ports:
      - "5173:5173"
    environment:
      - NODE_ENV=development
      - REDIS_URL=redis://redis:6379
      - KAFKA_URL=http://kafka:9092
    command: npm run dev -- --host 0.0.0.0
    depends_on:
      - kafka 
      - zookeeper
      - redis
    restart: on-failure
  
  zookeeper:
    image: confluentinc/cp-zookeeper:7.6.0
    container_name: zookeeper
    ports:
      - 2181:2181
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    healthcheck:
      test: ["CMD", "echo", "ruok", "|", "nc", "localhost", "2181"]
      interval: 5s
      timeout: 3s
      retries: 5

  kafka:
    image: confluentinc/cp-kafka:7.6.0
    container_name: kafka
    ports:
      - 9092:9092
    depends_on:
      zookeeper:
        condition: service_healthy
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "9092"]
      interval: 5s
      timeout: 3s
      retries: 10

  redis:
    image: redis:7.0-alpine
    container_name: redis
    ports:
      - 6379:6379
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "echo", "ruok", "|", "nc", "localhost", "6379"]
      interval: 5s
      timeout: 3s
      retries: 5